# Generated by: Neurodocker version 0.7.0+0.gdc97516.dirty
# Latest release: Neurodocker version 1.0.0
# Timestamp: 2024/06/12 06:58:42 UTC
# 
# Thank you for using Neurodocker. If you discover any issues
# or ways to improve this software, please submit an issue or
# pull request on our GitHub repository:
# 
#     https://github.com/ReproNim/neurodocker

FROM ubuntu:18.04

USER root

ARG DEBIAN_FRONTEND="noninteractive"

ENV LANG="en_US.UTF-8" \
    LC_ALL="en_US.UTF-8" \
    ND_ENTRYPOINT="/neurodocker/startup.sh"
RUN export ND_ENTRYPOINT="/neurodocker/startup.sh" \
    && apt-get update -qq \
    && apt-get install -y -q --no-install-recommends \
           apt-utils \
           bzip2 \
           ca-certificates \
           curl \
           locales \
           unzip \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* \
    && sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen \
    && dpkg-reconfigure --frontend=noninteractive locales \
    && update-locale LANG="en_US.UTF-8" \
    && chmod 777 /opt && chmod a+s /opt \
    && mkdir -p /neurodocker \
    && if [ ! -f "$ND_ENTRYPOINT" ]; then \
         echo '#!/usr/bin/env bash' >> "$ND_ENTRYPOINT" \
    &&   echo 'set -e' >> "$ND_ENTRYPOINT" \
    &&   echo 'export USER="${USER:=`whoami`}"' >> "$ND_ENTRYPOINT" \
    &&   echo 'if [ -n "$1" ]; then "$@"; else /usr/bin/env bash; fi' >> "$ND_ENTRYPOINT"; \
    fi \
    && chmod -R 777 /neurodocker && chmod a+s /neurodocker 
    

ENTRYPOINT ["/neurodocker/startup.sh"]

WORKDIR .

RUN apt-get update -qq \
    && apt-get install -y -q --no-install-recommends \
           git \
           less \
           nano \
           make \
           connectome-workbench \
           gmsh \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

ENV FREESURFER_HOME="/opt/freesurfer-6.0.0-min" \
    PATH="/opt/freesurfer-6.0.0-min/bin:$PATH"
RUN apt-get update -qq \
    && apt-get install -y -q --no-install-recommends \
           bc \
           libgomp1 \
           libxmu6 \
           libxt6 \
           perl \
           tcsh \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* \
    && echo "Downloading FreeSurfer ..." \
    && mkdir -p /opt/freesurfer-6.0.0-min \
    && curl -fsSL --retry 5 https://dl.dropbox.com/s/nnzcfttc41qvt31/recon-all-freesurfer6-3.min.tgz \
    | tar -xz -C /opt/freesurfer-6.0.0-min --strip-components 1 \
         --exclude='freesurfer/subjects/V1_average' \
    && sed -i '$isource "/opt/freesurfer-6.0.0-min/SetUpFreeSurfer.sh"' "$ND_ENTRYPOINT"

COPY ["./environment.yml", "/opt/environment.yml"]

ENV CONDA_DIR="/opt/miniconda-latest" \
    PATH="/opt/miniconda-latest/bin:$PATH"
RUN export PATH="/opt/miniconda-latest/bin:$PATH" \
    && echo "Downloading Miniconda installer ..." \
    && conda_installer="/tmp/miniconda.sh" \
    && curl -fsSL --retry 5 -o "$conda_installer" https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh \
    && bash "$conda_installer" -b -p /opt/miniconda-latest \
    && rm -f "$conda_installer" \
    && conda update -yq -nbase conda \
    && conda config --system --prepend channels conda-forge \
    && conda config --system --set auto_update_conda false \
    && conda config --system --set show_channel_urls true \
    && sync && conda clean -y --all && sync \
    && conda env create -q --name eigenstrapping_analysis --file /opt/environment.yml \
    && rm -rf ~/.cache/pip/*

RUN bash -c 'source activate eigenstrapping_analysis'

RUN sed -i '$isource activate eigenstrapping_analysis' $ND_ENTRYPOINT

RUN echo '{ \
    \n  "pkg_manager": "apt", \
    \n  "instructions": [ \
    \n    [ \
    \n      "base", \
    \n      "ubuntu:18.04" \
    \n    ], \
    \n    [ \
    \n      "workdir", \
    \n      "/vagrant" \
    \n    ], \
    \n    [ \
    \n      "install", \
    \n      [ \
    \n        "git", \
    \n        "less", \
    \n        "nano", \
    \n        "make", \
    \n        "connectome-workbench", \
    \n        "gmsh" \
    \n      ] \
    \n    ], \
    \n    [ \
    \n      "freesurfer", \
    \n      { \
    \n        "version": "6.0.0-min", \
    \n        "license_path": "container/license.txt", \
    \n        "exclude_paths": "subjects/V1_average" \
    \n      } \
    \n    ], \
    \n    [ \
    \n      "copy", \
    \n      [ \
    \n        "./environment.yml", \
    \n        "/opt/environment.yml" \
    \n      ] \
    \n    ], \
    \n    [ \
    \n      "miniconda", \
    \n      { \
    \n        "create_env": "eigenstrapping_analysis", \
    \n        "yaml_file": "/opt/environment.yml" \
    \n      } \
    \n    ], \
    \n    [ \
    \n      "run", \
    \n      "bash -c '"'"'source activate eigenstrapping_analysis'"'"'" \
    \n    ], \
    \n    [ \
    \n      "add_to_entrypoint", \
    \n      "source activate eigenstrapping_analysis" \
    \n    ] \
    \n  ] \
    \n}' > /neurodocker/neurodocker_specs.json

RUN echo    '=========================================================================' \
    && echo '||                                                                     ||' \
    && echo '|| Eigenstrapping analysis code. Copyright (C) 2024  Nikitas Koussis & ||' \
    && echo '||           Systems Neuroscience Group (SNG) Newcastle.               ||' \
    && echo '||                                                                     ||' \
    && echo '||  This program comes with ABSOLUTELY NO WARRANTY and is not fit for  ||' \
    && echo '||  for clinical, diagnostic or medical usage of any sort, and may not ||' \
    && echo '||                        be commercialized.                           ||' \
    && echo '||    This is free software, and you are welcome to redistribute it    ||' \
    && echo '||        under the GNU License v3.0 with attribution, and in its      ||' \
    && echo '||                         unmodified form.                            ||' \
    && echo '||                                                                     ||' \
    && echo '========================================================================='